//Time out
public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
    	List<List<Integer>> res = new ArrayList<List<Integer>>();
    	if (nums == null || nums.length < 3)
    		return res;

    	int fixed = 0;
    	while (fixed < nums.length-2) {
	    	int rest = 0 - nums[fixed];
           	Map<Integer,Integer> set = new HashMap<Integer,Integer>();

    		for (int i = fixed+1; i<nums.length; i++){
    		    List<Integer> list = new ArrayList<Integer>();

    			if (set.containsKey(nums[i])){
    				list.add(nums[fixed]);
    				list.add(nums[set.get(nums[i])]);
    				list.add(nums[i]);
    				res.add(list);
    			}
    			else {
    				set.put(rest - nums[i], i);
    			}
    		}
    	}
    	return res;


    }
}
