public class Solution {
    public int largestRectangleArea(int[] heights) {
        if (heights == null || heights.length == 0)
        	return 0;
        Deque<Integer> stack = new LinkedList<Integer>();
        int max = 0;
        for(int i = 0; i<=heights.length; i++){
        	int curVal = i == heights.length ? 0 : heights[i];
        	while (!stack.isEmpty() && heights[stack.peekLast()] >= curVal){
        		int height = heights[stack.pollLast()];
        		int leftBound = stack.isEmpty() ? 0:stack.peekLast()+1;
        		int rightBound = i;
        		max = Math.max(max, height * (rightBound - leftBound));
        	}
        	stack.addLast(i);
        }
        return max;
    }
}
